// Generated by CoffeeScript 1.7.1
var make_year, months;

window.database = {};

MONTH_NAMES = {
    1: ["Jan", "January"],
    2: ["Jan", "Febuary"],
    3: ["Jan", "March"],
    4: ["Jan", "April"],
    5: ["Jan", "May"],
    6: ["Jan", "June"],
    7: ["Jan", "July"],
    8: ["Jan", "August"],
    9: ["Jan", "September"],
    10: ["Jan", "October"],
    11: ["Jan", "November"],
    12: ["Jan", "December"]
};

function make_year(year, months) {
    var after, before, e, elm, m, timeline, yr, yrid, children;
    if (!months || months.length === 0) {
        months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
    }
    year = parseInt(year);
    timeline = $("#timeline");
    before = elm = after = 0;
    yrid = "y" + year;
    children = timeline.children("[id^='y']");
    for (var i = 0; i < children.length; i++) {
        e = children[i];
        if (!e.id) {
            continue;
        }
        if (e.id === yrid) {
            elm = $(e);
            break;
        } else {
            yr = parseInt(e.id.slice(1));
            if (year < yr) {
                before = e;
                break;
            } else if (year > yr) {
                after = e;
            }
        }
    }
    if (!elm) {
        elm = $("<div></div>");
        elm.attr("id", "y" + year);
        if (before) {
            $(before).before(elm);
        } else {
            $(after).after(elm);
        }
    }
    for (i = 0; i < months.length; i++) {
        m = months[i];
        ymid = "y" + year + "m" + m;
        if (elm.find("#" + ymid).length === 0) {
            e = $("<div></div>");
            e.append($("<div class='month-heading'>" + MONTH_NAMES[m][1] + " " + year + "</div>"));
            e.append($("<div class='content'></div>"));
            e.attr("id", ymid);
            elm.append(e); // This will need to be changed to put the stuff in the right palce.
        }
    }
}

function get_month_for(year, month) {
    ymid = "#y" + year + "m" + month;
    month_container = $("#timeline").find(ymid);
    if (month_container.length === 0) {
        make_year(year, [month]);
    }
    return month_container.find(".content");
}

$.extend(Trove.defaults, {
    q: town,
    include: "articletext,links,years",
    zone: "newspaper"
});

function parse_date(date_string) {
    // DAte: yyyy-mm-dd
    date_split = date_string.split("-");
    switch (date_split.length) {
        case 1:
            return {y: parseInt(date_split[0]), m: -1, d: -1};
        case 2:
            return {y: parseInt(date_split[0]), m: parseInt(date_split[1]), d: -1};
        default:
            return {y: parseInt(date_split[0]), m: parseInt(date_split[1]), d: parseInt(date_split[2])};
    }
}


function get_trove_listing(start, end, page_no) {
    if (!page_no) {
        page_no = 0;
    }
    Trove.date_listing(start, end, page_no, function(jqxhr, status) {
        if (status !== "success") {
            console.log(jqxhr.responseJSON);
            return get_trove_listing(start, end, page_no);
        }
        var data = jqxhr.responseJSON.response.zone[0].records.article;
        for (var i = 0; i < data.length; i++) {
            var d = data[i];
            var date = parse_date(d.date);
            var content = get_month_for(date.y, date.m);
            var c = $("<div></div>");
            c.html(d.articleText);
            
            content.append(c);
            
        }
    });
}



$(function() {
    console.log("ASDF");
    get_trove_listing(1950, false, 0);
    get_trove_listing(false, 1950, 0);
});
